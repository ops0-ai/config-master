# Build stage
FROM node:18-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 make g++

# Copy all package.json files
COPY package.json package-lock.json ./
COPY packages/database/package.json ./packages/database/
COPY packages/ansible-engine/package.json ./packages/ansible-engine/
COPY apps/api/package.json ./apps/api/

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Build packages in correct order
RUN cd packages/database && npm run build
RUN cd packages/ansible-engine && npm run build
RUN cd apps/api && npm run build

# Runtime stage
FROM node:18-alpine

WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache python3 py3-pip

# Copy built application
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/packages ./packages
COPY --from=builder /app/apps/api/dist ./apps/api/dist
COPY --from=builder /app/apps/api/src ./apps/api/src
COPY --from=builder /app/apps/api/package.json ./apps/api/
COPY --from=builder /app/apps/api/drizzle.config.ts ./apps/api/
COPY --from=builder /app/apps/api/drizzle ./apps/api/drizzle
COPY --from=builder /app/package.json ./

# Create necessary directories
RUN mkdir -p /app/secure/pem-keys

WORKDIR /app/apps/api

EXPOSE 5005

CMD ["node", "dist/index.js"]