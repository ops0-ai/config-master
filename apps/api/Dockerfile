# API Dockerfile - TypeScript server with CORS fix
FROM node:18-alpine

# Install dependencies for native modules and PostgreSQL client  
RUN apk add --no-cache python3 make g++ openssl postgresql-client

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY apps/api/package*.json ./apps/api/
COPY packages/database/package*.json ./packages/database/
COPY packages/ansible-engine/package*.json ./packages/ansible-engine/

# Install dependencies
RUN npm install

# Copy source code
COPY apps/api ./apps/api
COPY packages ./packages

# Set working directory to API
WORKDIR /app/apps/api

# Install TypeScript globally and build
RUN npm install -g typescript
RUN npx tsc

# Remove dev dependencies after build
WORKDIR /app
RUN npm prune --production

# Set final working directory
WORKDIR /app/apps/api

# Create required directories
RUN mkdir -p /app/uploads /app/logs /secure/pem-keys

# Expose port
EXPOSE 5005

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:5005/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })" || exit 1

# Run the compiled TypeScript application
CMD ["node", "dist/index.js"]